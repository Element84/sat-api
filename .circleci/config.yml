version: 2

references:
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo
  save_repo: &save_repo
    save_cache:
      key: v1-repo-{{ .Branch }}-{{ .Revision }}
      paths:
        - ~/project


jobs:
  build_and_test:
    docker:
      - image: circleci/node:8.11
    steps:
      - *restore_repo
      - checkout
      - *save_repo
      - run:
          name: Install
          command: |
            yarn
            yarn bootstrap
      - run:
          name: Lint
          command: yarn eslint
      - run:
          name: Build and test
          command: |
            yarn build
            yarn test
      - run:
          name: Build Documentation
          command: |
            if [[  "$CIRCLE_BRANCH" == 'master' ]]; then
              yarn docs-build
            fi
      - run:
          name: Deploy example to aws
          command: |
            if [[  "$CIRCLE_BRANCH" == 'master' ]]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
              VERSION=$(jq --raw-output .version lerna.json)
              node_modules/.bin/lerna publish --skip-git --repo-version $VERSION --yes --force-publish=*
            fi

  docker_build_and_test:
    machine:
      docker_layer_caching: true
    steps:
      - *restore_repo
      - checkout
      - *save_repo
      - run:
          name: Build Docker image
          command: |
            docker build -t satutils/sat-api:latest .
      - run:
          name: Test Docker image
          command: |
            docker run -it satutils/sat-api:latest yarn test

  docker_deploy:
    machine:
      docker_layer_caching: true
    steps:
      - run:
          name: Deploy Docker image
          command: |
            docker run -it satutils/sat-api:latest yarn test
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            if [[  "$CIRCLE_BRANCH" == 'master' ]]; then
              VERSION=$(jq --raw-output .version lerna.json)
              docker tag developmentseed/sat-api:latest developmentseed/sat-api:${VERSION}
              docker push developmentseed/sat-api:latest developmentseed/sat-api:${VERSION}
            elif [[  "$CIRCLE_BRANCH" == 'develop' ]]; then
              docker tag developmentseed/sat-api:latest developmentseed/sat-api:develop
              docker push developmentseed/sat-api:develop
            fi


workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test
  docker_build_and_test:
    jobs:
      - docker_build_and_test
      - docker_deploy:
          requires:
            - docker_build_and_test          
#          filters:
#            branches:
#              only: master
